{"remainingRequest":"C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\src\\components\\Gnotes.vue?vue&type=template&id=be83a02c&scoped=true&","dependencies":[{"path":"C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\src\\components\\Gnotes.vue","mtime":1624978330534},{"path":"C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}