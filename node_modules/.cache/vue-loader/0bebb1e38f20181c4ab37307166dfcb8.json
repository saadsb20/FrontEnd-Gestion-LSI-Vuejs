{"remainingRequest":"C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\src\\components\\Crud\\Crud-E.vue?vue&type=template&id=0a699c07&scoped=true&","dependencies":[{"path":"C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\src\\components\\Crud\\Crud-E.vue","mtime":1624991710863},{"path":"C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SAAD\\Desktop\\LSI S2\\Framworks\\Gestion LSI\\LSI-VUE\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQo8ZGl2Pg0KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci14bCI+DQogICAgICA8ZGl2IGNsYXNzPSJ0YWJsZS1yZXNwb25zaXZlIj4NCiAgICAgICAgPGRpdiBjbGFzcz0idGFibGUtd3JhcHBlciI+DQogICAgICAgICAgPGRpdiBjbGFzcz0idGFibGUtdGl0bGUiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPg0KICAgICAgICAgICAgICAgIDxoMj5nZXN0aW9uIDxiPkV0dWRpYW50czwvYj48L2gyPg0KICAgICAgICAgICAgICAgIDxiciAvPg0KICAgICAgICAgICAgICAgIDxiLWlucHV0DQogICAgICAgICAgICAgICAgICB0eXBlPSJzZWFyY2giDQogICAgICAgICAgICAgICAgICBjbGFzcz0ic2VhcmNoIg0KICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9InNlYXJjaCINCiAgICAgICAgICAgICAgICA+PC9iLWlucHV0Pg0KICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+DQogICAgICAgICAgICAgICAgPGEgaHJlZj0iI2FkZFN0dWRlbnRNb2RhbCIgY2xhc3M9ImJ0biBidG4iIGRhdGEtdG9nZ2xlPSJtb2RhbCIgQGNsaWNrPSJzaG93MihzZW1lc3RyZV9pZCkiPjxpIGNsYXNzPSJtYXRlcmlhbC1pY29ucyI+JiN4RTE0Nzs8L2k+DQogICAgICAgICAgICAgICAgICA8c3Bhbj5Bam91dGVyIEV0dWRpYW50PC9zcGFuPjwvYQ0KICAgICAgICAgICAgICAgID4NCiAgICAgICAgICAgICAgICA8YQ0KICAgICAgICAgICAgICAgICAgaHJlZj0iI2RlbGV0ZUVtcGxveWVlTW9kYWwiDQogICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0biINCiAgICAgICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPSJtb2RhbCINCiAgICAgICAgICAgICAgICAgID48aSBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiPiYjeEUxNUM7PC9pPg0KICAgICAgICAgICAgICAgICAgPHNwYW4+U3VwcHJpbWVyPC9zcGFuPjwvYQ0KICAgICAgICAgICAgICAgID4NCiAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8Yi10YWJzIGNvbnRlbnQtY2xhc3M9Im10LTMiIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICAgIDxiLXRhYiBAY2xpY2s9InNob3coMSkiICB0aXRsZT0iU2VtZXN0cmUgMSIgOmFjdGl2ZT0iYWN0aXZlIj4NCiAgICAgICAgICAgIDx0YWJsZSB2LWlmPSJSZWxvYWRpbmciIGNsYXNzPSJ0YWJsZSB0YWJsZS1zdHJpcGVkIHRhYmxlLWhvdmVyIGNlbnRlciI+DQogICAgICAgICAgICAgICAgPHRoZWFkPg0KICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICA8dGg+DQogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImN1c3RvbS1jaGVja2JveCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWxlY3RBbGwiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWxlY3RBbGwiPjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+Tm9tPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPlByZW5vbTwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5DTkU8L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+Q0lOPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPkVtYWlsPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPkRhdGUgZGUgbmFpc3NhbmNlPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPmVkaXQgfCBkZWxldGU8L3RoPg0KICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8L3RoZWFkPg0KICAgICAgICAgICAgICAgIDx0Ym9keSA+DQogICAgICAgICAgICAgICAgICA8dHIgdi1mb3I9ImV0dWRpYW50IGluIGV0dWRpYW50cyIgOmtleT0iZXR1ZGlhbnQuaWQiPg0KICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wtMiI+e3sgZXR1ZGlhbnQubm9tIH19PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wtMiI+e3sgZXR1ZGlhbnQucHJlbm9tIH19PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGV0dWRpYW50LkNORSB9fTwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sLTIiPnt7IGV0dWRpYW50LkNJTiB9fTwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sLTIiPnt7IGV0dWRpYW50LmVtYWlsIH19PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wtMiI+e3sgZXR1ZGlhbnQuZGF0ZV9uIH19PC90ZD4NCg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC0yIj4NCiAgICAgICAgICAgICAgICAgICAgICA8YQ0KICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iI2VkaXRFbXBsb3llZU1vZGFsIg0KICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImVkaXQiDQogICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImVkaXQoZXR1ZGlhbnQuaWQpIg0KICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9Im1vZGFsIg0KICAgICAgICAgICAgICAgICAgICAgICAgPjxpDQogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtYXRlcmlhbC1pY29ucyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9InRvb2x0aXAiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJFZGl0Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICA+JiN4RTI1NDs8L2kNCiAgICAgICAgICAgICAgICAgICAgICAgID48L2ENCiAgICAgICAgICAgICAgICAgICAgICA+DQogICAgICAgICAgICAgICAgICAgICAgJm5ic3A7ICZuYnNwOw0KDQogICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyINCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJkZWxldGUiDQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRvZ2dsZT0ibW9kYWwiDQogICAgICAgICAgICAgICAgICAgICAgICA+PGkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1hdGVyaWFsLWljb25zICBwb2ludGVyIg0KICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJkZWxldGVTdHVkZW50KGV0dWRpYW50LmlkKSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9InRvb2x0aXAiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJEZWxldGUiDQogICAgICAgICAgICAgICAgICAgICAgICAgID4mI3hFODcyOzwvaQ0KICAgICAgICAgICAgICAgICAgICAgICAgPjwvYQ0KICAgICAgICAgICAgICAgICAgICAgID4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgPGRpdiB2LWlmPSIhUmVsb2FkaW5nIiAgY2xhc3M9InRleHQtY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgIDxiLXNwaW5uZXIgIHZhcmlhbnQ9InByaW1hcnkiIHR5cGU9Imdyb3ciIGxhYmVsPSJTcGlubmluZyI+PC9iLXNwaW5uZXI+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgPC9iLXRhYj4NCiAgICAgICAgICA8Yi10YWIgQGNsaWNrPSJzaG93KDIpIiAgdGl0bGU9IlNlbWVzdHJlIDIiIDphY3RpdmU9ImFjdGl2ZSI+DQogICAgICAgICAgICA8dGFibGUgdi1pZj0iUmVsb2FkaW5nIiBjbGFzcz0idGFibGUgdGFibGUtc3RyaXBlZCB0YWJsZS1ob3ZlciBjZW50ZXIiPg0KICAgICAgICAgICAgICAgIDx0aGVhZD4NCiAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgPHRoPg0KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjdXN0b20tY2hlY2tib3giPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VsZWN0QWxsIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VsZWN0QWxsIj48L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPk5vbTwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5QcmVub208L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+Q05FPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPkNJTjwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5FbWFpbDwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5EYXRlIGRlIG5haXNzYW5jZTwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5lZGl0IHwgZGVsZXRlPC90aD4NCiAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgPC90aGVhZD4NCiAgICAgICAgICAgICAgICA8dGJvZHkgPg0KICAgICAgICAgICAgICAgICAgPHRyIHYtZm9yPSJldHVkaWFudCBpbiBldHVkaWFudHMiIDprZXk9ImV0dWRpYW50LmlkIj4NCiAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sLTIiPnt7IGV0dWRpYW50Lm5vbSB9fTwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sLTIiPnt7IGV0dWRpYW50LnByZW5vbSB9fTwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZD57eyBldHVkaWFudC5DTkUgfX08L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC0yIj57eyBldHVkaWFudC5DSU4gfX08L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC0yIj57eyBldHVkaWFudC5lbWFpbCB9fTwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sLTIiPnt7IGV0dWRpYW50LmRhdGVfbiB9fTwvdGQ+DQoNCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wtMiI+DQogICAgICAgICAgICAgICAgICAgICAgPGENCiAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9IiNlZGl0RW1wbG95ZWVNb2RhbCINCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJlZGl0Ig0KICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJlZGl0KGV0dWRpYW50LmlkKSINCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPSJtb2RhbCINCiAgICAgICAgICAgICAgICAgICAgICAgID48aQ0KICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiDQogICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iRWRpdCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgPiYjeEUyNTQ7PC9pDQogICAgICAgICAgICAgICAgICAgICAgICA+PC9hDQogICAgICAgICAgICAgICAgICAgICAgPg0KICAgICAgICAgICAgICAgICAgICAgICZuYnNwOyAmbmJzcDsNCg0KICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiDQogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZGVsZXRlIg0KICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9Im1vZGFsIg0KICAgICAgICAgICAgICAgICAgICAgICAgPjxpDQogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtYXRlcmlhbC1pY29ucyAgcG9pbnRlciINCiAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iZGVsZXRlU3R1ZGVudChldHVkaWFudC5pZCkiDQogICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iRGVsZXRlIg0KICAgICAgICAgICAgICAgICAgICAgICAgICA+JiN4RTg3Mjs8L2kNCiAgICAgICAgICAgICAgICAgICAgICAgID48L2ENCiAgICAgICAgICAgICAgICAgICAgICA+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgICAgICAgIDwvdGFibGU+DQogICAgICAgICAgICAgIDxkaXYgdi1pZj0iIVJlbG9hZGluZyIgIGNsYXNzPSJ0ZXh0LWNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICA8Yi1zcGlubmVyICB2YXJpYW50PSJwcmltYXJ5IiB0eXBlPSJncm93IiBsYWJlbD0iU3Bpbm5pbmciPjwvYi1zcGlubmVyPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDwvYi10YWI+DQogICAgICAgICAgPGItdGFiIEBjbGljaz0ic2hvdygzKSIgIHRpdGxlPSJTZW1lc3RyZSAzIiA6YWN0aXZlPSJhY3RpdmUiPg0KICAgICAgICAgICAgPHRhYmxlIHYtaWY9IlJlbG9hZGluZyIgY2xhc3M9InRhYmxlIHRhYmxlLXN0cmlwZWQgdGFibGUtaG92ZXIgY2VudGVyIj4NCiAgICAgICAgICAgICAgICA8dGhlYWQ+DQogICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgIDx0aD4NCiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY3VzdG9tLWNoZWNrYm94Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlbGVjdEFsbCIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlbGVjdEFsbCI+PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5Ob208L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+UHJlbm9tPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPkNORTwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5DSU48L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+RW1haWw8L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+RGF0ZSBkZSBuYWlzc2FuY2U8L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+ZWRpdCB8IGRlbGV0ZTwvdGg+DQogICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgIDwvdGhlYWQ+DQogICAgICAgICAgICAgICAgPHRib2R5ID4NCiAgICAgICAgICAgICAgICAgIDx0ciB2LWZvcj0iZXR1ZGlhbnQgaW4gZXR1ZGlhbnRzIiA6a2V5PSJldHVkaWFudC5pZCI+DQogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC0yIj57eyBldHVkaWFudC5ub20gfX08L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC0yIj57eyBldHVkaWFudC5wcmVub20gfX08L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZXR1ZGlhbnQuQ05FIH19PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wtMiI+e3sgZXR1ZGlhbnQuQ0lOIH19PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wtMiI+e3sgZXR1ZGlhbnQuZW1haWwgfX08L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC0yIj57eyBldHVkaWFudC5kYXRlX24gfX08L3RkPg0KDQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sLTIiPg0KICAgICAgICAgICAgICAgICAgICAgIDxhDQogICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIjZWRpdEVtcGxveWVlTW9kYWwiDQogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZWRpdCINCiAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iZWRpdChldHVkaWFudC5pZCkiDQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRvZ2dsZT0ibW9kYWwiDQogICAgICAgICAgICAgICAgICAgICAgICA+PGkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1hdGVyaWFsLWljb25zIg0KICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRvZ2dsZT0idG9vbHRpcCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IkVkaXQiDQogICAgICAgICAgICAgICAgICAgICAgICAgID4mI3hFMjU0OzwvaQ0KICAgICAgICAgICAgICAgICAgICAgICAgPjwvYQ0KICAgICAgICAgICAgICAgICAgICAgID4NCiAgICAgICAgICAgICAgICAgICAgICAmbmJzcDsgJm5ic3A7DQoNCiAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIg0KICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImRlbGV0ZSINCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPSJtb2RhbCINCiAgICAgICAgICAgICAgICAgICAgICAgID48aQ0KICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMgIHBvaW50ZXIiDQogICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImRlbGV0ZVN0dWRlbnQoZXR1ZGlhbnQuaWQpIg0KICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRvZ2dsZT0idG9vbHRpcCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IkRlbGV0ZSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgPiYjeEU4NzI7PC9pDQogICAgICAgICAgICAgICAgICAgICAgICA+PC9hDQogICAgICAgICAgICAgICAgICAgICAgPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICA8ZGl2IHYtaWY9IiFSZWxvYWRpbmciICBjbGFzcz0idGV4dC1jZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgPGItc3Bpbm5lciAgdmFyaWFudD0icHJpbWFyeSIgdHlwZT0iZ3JvdyIgbGFiZWw9IlNwaW5uaW5nIj48L2Itc3Bpbm5lcj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8L2ItdGFiPg0KICAgICAgICAgIDxiLXRhYiBAY2xpY2s9InNob3coNCkiICB0aXRsZT0iU2VtZXN0cmUgNCIgOmFjdGl2ZT0iYWN0aXZlIj4NCiAgICAgICAgICAgIDx0YWJsZSB2LWlmPSJSZWxvYWRpbmciIGNsYXNzPSJ0YWJsZSB0YWJsZS1zdHJpcGVkIHRhYmxlLWhvdmVyIGNlbnRlciI+DQogICAgICAgICAgICAgICAgPHRoZWFkPg0KICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICA8dGg+DQogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImN1c3RvbS1jaGVja2JveCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWxlY3RBbGwiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWxlY3RBbGwiPjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+Tm9tPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPlByZW5vbTwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5DTkU8L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+Q0lOPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPkVtYWlsPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPkRhdGUgZGUgbmFpc3NhbmNlPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPmVkaXQgfCBkZWxldGU8L3RoPg0KICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8L3RoZWFkPg0KICAgICAgICAgICAgICAgIDx0Ym9keSA+DQogICAgICAgICAgICAgICAgICA8dHIgdi1mb3I9ImV0dWRpYW50IGluIGV0dWRpYW50cyIgOmtleT0iZXR1ZGlhbnQuaWQiPg0KICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wtMiI+e3sgZXR1ZGlhbnQubm9tIH19PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wtMiI+e3sgZXR1ZGlhbnQucHJlbm9tIH19PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGV0dWRpYW50LkNORSB9fTwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sLTIiPnt7IGV0dWRpYW50LkNJTiB9fTwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sLTIiPnt7IGV0dWRpYW50LmVtYWlsIH19PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wtMiI+e3sgZXR1ZGlhbnQuZGF0ZV9uIH19PC90ZD4NCg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC0yIj4NCiAgICAgICAgICAgICAgICAgICAgICA8YQ0KICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iI2VkaXRFbXBsb3llZU1vZGFsIg0KICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImVkaXQiDQogICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImVkaXQoZXR1ZGlhbnQuaWQpIg0KICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9Im1vZGFsIg0KICAgICAgICAgICAgICAgICAgICAgICAgPjxpDQogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtYXRlcmlhbC1pY29ucyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9InRvb2x0aXAiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJFZGl0Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICA+JiN4RTI1NDs8L2kNCiAgICAgICAgICAgICAgICAgICAgICAgID48L2ENCiAgICAgICAgICAgICAgICAgICAgICA+DQogICAgICAgICAgICAgICAgICAgICAgJm5ic3A7ICZuYnNwOw0KDQogICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyINCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJkZWxldGUiDQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRvZ2dsZT0ibW9kYWwiDQogICAgICAgICAgICAgICAgICAgICAgICA+PGkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1hdGVyaWFsLWljb25zICBwb2ludGVyIg0KICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJkZWxldGVTdHVkZW50KGV0dWRpYW50LmlkKSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9InRvb2x0aXAiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJEZWxldGUiDQogICAgICAgICAgICAgICAgICAgICAgICAgID4mI3hFODcyOzwvaQ0KICAgICAgICAgICAgICAgICAgICAgICAgPjwvYQ0KICAgICAgICAgICAgICAgICAgICAgID4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgPGRpdiB2LWlmPSIhUmVsb2FkaW5nIiAgY2xhc3M9InRleHQtY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgIDxiLXNwaW5uZXIgIHZhcmlhbnQ9InByaW1hcnkiIHR5cGU9Imdyb3ciIGxhYmVsPSJTcGlubmluZyI+PC9iLXNwaW5uZXI+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgPC9iLXRhYj4NCiAgICAgICAgICA8Yi10YWIgQGNsaWNrPSJzaG93KDUpIiAgdGl0bGU9IlNlbWVzdHJlIDUiIDphY3RpdmU9ImFjdGl2ZSI+DQogICAgICAgICAgICA8dGFibGUgdi1pZj0iUmVsb2FkaW5nIiBjbGFzcz0idGFibGUgdGFibGUtc3RyaXBlZCB0YWJsZS1ob3ZlciBjZW50ZXIiPg0KICAgICAgICAgICAgICAgIDx0aGVhZD4NCiAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgPHRoPg0KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjdXN0b20tY2hlY2tib3giPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VsZWN0QWxsIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VsZWN0QWxsIj48L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPk5vbTwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5QcmVub208L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+Q05FPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPkNJTjwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5FbWFpbDwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5EYXRlIGRlIG5haXNzYW5jZTwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5lZGl0IHwgZGVsZXRlPC90aD4NCiAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgPC90aGVhZD4NCiAgICAgICAgICAgICAgICA8dGJvZHkgPg0KICAgICAgICAgICAgICAgICAgPHRyIHYtZm9yPSJldHVkaWFudCBpbiBldHVkaWFudHMiIDprZXk9ImV0dWRpYW50LmlkIj4NCiAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sLTIiPnt7IGV0dWRpYW50Lm5vbSB9fTwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sLTIiPnt7IGV0dWRpYW50LnByZW5vbSB9fTwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZD57eyBldHVkaWFudC5DTkUgfX08L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC0yIj57eyBldHVkaWFudC5DSU4gfX08L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC0yIj57eyBldHVkaWFudC5lbWFpbCB9fTwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sLTIiPnt7IGV0dWRpYW50LmRhdGVfbiB9fTwvdGQ+DQoNCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wtMiI+DQogICAgICAgICAgICAgICAgICAgICAgPGENCiAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9IiNlZGl0RW1wbG95ZWVNb2RhbCINCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJlZGl0Ig0KICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJlZGl0KGV0dWRpYW50LmlkKSINCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPSJtb2RhbCINCiAgICAgICAgICAgICAgICAgICAgICAgID48aQ0KICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiDQogICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iRWRpdCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgPiYjeEUyNTQ7PC9pDQogICAgICAgICAgICAgICAgICAgICAgICA+PC9hDQogICAgICAgICAgICAgICAgICAgICAgPg0KICAgICAgICAgICAgICAgICAgICAgICZuYnNwOyAmbmJzcDsNCg0KICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiDQogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZGVsZXRlIg0KICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9Im1vZGFsIg0KICAgICAgICAgICAgICAgICAgICAgICAgPjxpDQogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtYXRlcmlhbC1pY29ucyAgcG9pbnRlciINCiAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iZGVsZXRlU3R1ZGVudChldHVkaWFudC5pZCkiDQogICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iRGVsZXRlIg0KICAgICAgICAgICAgICAgICAgICAgICAgICA+JiN4RTg3Mjs8L2kNCiAgICAgICAgICAgICAgICAgICAgICAgID48L2ENCiAgICAgICAgICAgICAgICAgICAgICA+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgICAgICAgIDwvdGFibGU+DQogICAgICAgICAgICAgIDxkaXYgdi1pZj0iIVJlbG9hZGluZyIgIGNsYXNzPSJ0ZXh0LWNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICA8Yi1zcGlubmVyICB2YXJpYW50PSJwcmltYXJ5IiB0eXBlPSJncm93IiBsYWJlbD0iU3Bpbm5pbmciPjwvYi1zcGlubmVyPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDwvYi10YWI+DQogICAgICAgICAgPGItdGFiIEBjbGljaz0ic2hvdyg2KSIgIHRpdGxlPSJTZW1lc3RyZSA2IiA6YWN0aXZlPSJhY3RpdmUiPg0KICAgICAgICAgICAgPHRhYmxlIHYtaWY9IlJlbG9hZGluZyIgY2xhc3M9InRhYmxlIHRhYmxlLXN0cmlwZWQgdGFibGUtaG92ZXIgY2VudGVyIj4NCiAgICAgICAgICAgICAgICA8dGhlYWQ+DQogICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgIDx0aD4NCiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY3VzdG9tLWNoZWNrYm94Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlbGVjdEFsbCIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlbGVjdEFsbCI+PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5Ob208L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+UHJlbm9tPC90aD4NCiAgICAgICAgICAgICAgICAgICAgPHRoPkNORTwvdGg+DQogICAgICAgICAgICAgICAgICAgIDx0aD5DSU48L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+RW1haWw8L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+RGF0ZSBkZSBuYWlzc2FuY2U8L3RoPg0KICAgICAgICAgICAgICAgICAgICA8dGg+ZWRpdCB8IGRlbGV0ZTwvdGg+DQogICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgIDwvdGhlYWQ+DQogICAgICAgICAgICAgICAgPHRib2R5ID4NCiAgICAgICAgICAgICAgICAgIDx0ciB2LWZvcj0iZXR1ZGlhbnQgaW4gZXR1ZGlhbnRzIiA6a2V5PSJldHVkaWFudC5pZCI+DQogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC0yIj57eyBldHVkaWFudC5ub20gfX08L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC0yIj57eyBldHVkaWFudC5wcmVub20gfX08L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZXR1ZGlhbnQuQ05FIH19PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wtMiI+e3sgZXR1ZGlhbnQuQ0lOIH19PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wtMiI+e3sgZXR1ZGlhbnQuZW1haWwgfX08L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC0yIj57eyBldHVkaWFudC5kYXRlX24gfX08L3RkPg0KDQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sLTIiPg0KICAgICAgICAgICAgICAgICAgICAgIDxhDQogICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIjZWRpdEVtcGxveWVlTW9kYWwiDQogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZWRpdCINCiAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iZWRpdChldHVkaWFudC5pZCkiDQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRvZ2dsZT0ibW9kYWwiDQogICAgICAgICAgICAgICAgICAgICAgICA+PGkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1hdGVyaWFsLWljb25zIg0KICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRvZ2dsZT0idG9vbHRpcCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IkVkaXQiDQogICAgICAgICAgICAgICAgICAgICAgICAgID4mI3hFMjU0OzwvaQ0KICAgICAgICAgICAgICAgICAgICAgICAgPjwvYQ0KICAgICAgICAgICAgICAgICAgICAgID4NCiAgICAgICAgICAgICAgICAgICAgICAmbmJzcDsgJm5ic3A7DQoNCiAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIg0KICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImRlbGV0ZSINCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPSJtb2RhbCINCiAgICAgICAgICAgICAgICAgICAgICAgID48aQ0KICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMgIHBvaW50ZXIiDQogICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImRlbGV0ZVN0dWRlbnQoZXR1ZGlhbnQuaWQpIg0KICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRvZ2dsZT0idG9vbHRpcCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IkRlbGV0ZSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgPiYjeEU4NzI7PC9pDQogICAgICAgICAgICAgICAgICAgICAgICA+PC9hDQogICAgICAgICAgICAgICAgICAgICAgPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICA8ZGl2IHYtaWY9IiFSZWxvYWRpbmciICBjbGFzcz0idGV4dC1jZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgPGItc3Bpbm5lciAgdmFyaWFudD0icHJpbWFyeSIgdHlwZT0iZ3JvdyIgbGFiZWw9IlNwaW5uaW5nIj48L2Itc3Bpbm5lcj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8L2ItdGFiPg0KDQogICAgICAgICAgIA0KICAgICAgICAgIDwvYi10YWJzPg0KDQogICAgICAgICAgDQogICAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2VudGVyIj4NCiAgICAgICAgICAgICAgPGItcGFnaW5hdGlvbg0KICAgICAgICAgICAgICAgIGNsYXNzPSJ0ZXh0LWNlbnRlciINCiAgICAgICAgICAgICAgICB2LW1vZGVsPSJjdXJyZW50UGFnZSINCiAgICAgICAgICAgICAgICA6dG90YWwtcm93cz0icm93cyINCiAgICAgICAgICAgICAgPjwvYi1wYWdpbmF0aW9uPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPCEtLSBFZGl0IE1vZGFsIEhUTUwgLS0+DQogICAgPGRpdiBpZD0iYWRkU3R1ZGVudE1vZGFsIiBjbGFzcz0ibW9kYWwgZmFkZSI+DQogICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1kaWFsb2ciPg0KICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1jb250ZW50Ij4NCiAgICAgICAgICA8Zm9ybT4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+DQogICAgICAgICAgICAgIDxoNCBjbGFzcz0ibW9kYWwtdGl0bGUiPkFqb3V0ZXIgw6l0dWRpYW50PC9oND4NCiAgICAgICAgICAgICAgPGJ1dHRvbg0KICAgICAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiINCiAgICAgICAgICAgICAgICBjbGFzcz0iY2xvc2UiDQogICAgICAgICAgICAgICAgZGF0YS1kaXNtaXNzPSJtb2RhbCINCiAgICAgICAgICAgICAgICBhcmlhLWhpZGRlbj0idHJ1ZSINCiAgICAgICAgICAgICAgPg0KICAgICAgICAgICAgICAgICZ0aW1lczsNCiAgICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICAgIDxiLWNhcmQgY2xhc3M9InJlZ2lzdHJlLWZvcm0iPg0KICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtICBjbGFzcz0ibXQtMyBjYXJkLWJvZHkiID4NCiAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwIGlkPSJpbnB1dC1ncm91cC0xIiBsYWJlbD0iTm9tIDoiIGxhYmVsLWZvcj0iaW5wdXQtMSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0DQogICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJpbnB1dC0xIg0KICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJmb3JtLm5vbSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9Im5vbSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQNCiAgICAgICAgICAgICAgICAgICAgICAgID48L2ItZm9ybS1pbnB1dD4NCiAgICAgICAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4NCiAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwIGlkPSJpbnB1dC1ncm91cC0xIiBsYWJlbD0iUHJlbm9tIDoiIGxhYmVsLWZvcj0iaW5wdXQtMSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0DQogICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJpbnB1dC0xIg0KICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJmb3JtLnByZW5vbSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9InByw6lub20iDQogICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkDQogICAgICAgICAgICAgICAgICAgICAgICA+PC9iLWZvcm0taW5wdXQ+DQogICAgICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+DQogICAgICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cA0KICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImlucHV0LWdyb3VwLTEiDQogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0iRGF0ZSBuYWlzc2FuY2UiDQogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbC1mb3I9ImlucHV0LTEiDQogICAgICAgICAgICAgICAgICAgICAgPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGItZm9ybS1pbnB1dA0KICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0iaW5wdXQtMSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZm9ybS5kYXRlX24iDQogICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9ImRhdGUiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkDQogICAgICAgICAgICAgICAgICAgICAgICA+PC9iLWZvcm0taW5wdXQ+DQogICAgICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+DQogICAgICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cCBpZD0iaW5wdXQtZ3JvdXAtMSIgbGFiZWw9IkNJTiIgbGFiZWwtZm9yPSJpbnB1dC0xIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxiLWZvcm0taW5wdXQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImlucHV0LTEiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImZvcm0uQ0lOIg0KICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iWFgxMjM0NSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQNCiAgICAgICAgICAgICAgICAgICAgICAgID48L2ItZm9ybS1pbnB1dD4NCiAgICAgICAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4NCiAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwIGlkPSJpbnB1dC1ncm91cC0xIiBsYWJlbD0iQ05FIiBsYWJlbC1mb3I9ImlucHV0LTEiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGItZm9ybS1pbnB1dA0KICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0iaW5wdXQtMSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZm9ybS5DTkUiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJYMTIzNDU2NzgiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkDQogICAgICAgICAgICAgICAgICAgICAgICA+PC9iLWZvcm0taW5wdXQ+DQogICAgICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+DQogICAgICAgICAgICAgICAgICAgICAgPCEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gZW1haWwtLS0tLS0tLS0tLS0tLS0tLS0tLSAtLT4NCiAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwIGlkPSJpbnB1dC1ncm91cC02IiBsYWJlbD0iRW1haWwiIGxhYmVsLWZvcj0iaW5wdXQtNSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0DQogICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJpbnB1dC01Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJlbWFpbCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZm9ybS5lbWFpbCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkV4OiBleGVtcGxlQGdtYWlsLmNvbSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQNCiAgICAgICAgICAgICAgICAgICAgICAgID48L2ItZm9ybS1pbnB1dD4NCiAgICAgICAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4NCg0KICAgICAgICAgICAgICAgICAgICAgIDwhLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHBhc3N3b3JkLS0tLS0tLS0tLS0tLS0tLS0tLS0gLS0+DQogICAgICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cA0KICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImlucHV0LWdyb3VwLTYiDQogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0iTW90ZSBkZSBwYXNzZSINCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsLWZvcj0iaW5wdXQtNSINCiAgICAgICAgICAgICAgICAgICAgICA+DQogICAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0DQogICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJpbnB1dC01Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iKioqKioqKioiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImZvcm0ucGFzc3dvcmQiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkDQogICAgICAgICAgICAgICAgICAgICAgICA+PC9iLWZvcm0taW5wdXQ+DQogICAgICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+DQogICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgPGItYnV0dG9uICBjbGFzcz0ibXgtMiIgIEBjbGljaz0icmVnaXN0ZXIiICB2YXJpYW50PSJwcmltYXJ5Ij4gRW5yZWdpc3RyZXIgPC9iLWJ1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgPC9iLWZvcm0+DQogICAgICAgICAgICAgICAgICA8L2ItY2FyZD4NCg0KICAgICAgICAgICAgICAgICAgPGItY2FyZCBjbGFzcz0ibXQtMyBtYi01IiBoZWFkZXI9IkZvcm0gRGF0YSBSZXN1bHQiPg0KICAgICAgICAgICAgICAgICAgICA8cHJlIGNsYXNzPSJtLTAiPnt7IGZvcm0gfX08L3ByZT4NCiAgICAgICAgICAgICAgICAgIDwvYi1jYXJkPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+DQogICAgICAgICAgICAgICAgICA8aW5wdXQNCiAgICAgICAgICAgICAgICAgICAgdHlwZT0iYnV0dG9uIg0KICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0Ig0KICAgICAgICAgICAgICAgICAgICBkYXRhLWRpc21pc3M9Im1vZGFsIg0KICAgICAgICAgICAgICAgICAgICB2YWx1ZT0iQ2FuY2VsIg0KICAgICAgICAgICAgICAgICAgLz4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgPC9mb3JtPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgPC9kaXY+DQogICAgPCEtLSBFZGl0IE1vZGFsIEhUTUwgLS0+DQogICAgPGRpdiBpZD0iZWRpdEVtcGxveWVlTW9kYWwiIGNsYXNzPSJtb2RhbCBmYWRlIj4NCiAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyI+DQogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPg0KICAgICAgICAgIDxmb3JtPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4NCiAgICAgICAgICAgICAgPGg0IGNsYXNzPSJtb2RhbC10aXRsZSI+bW9kaWZpZXI8L2g0Pg0KICAgICAgICAgICAgICA8YnV0dG9uDQogICAgICAgICAgICAgICAgdHlwZT0iYnV0dG9uIg0KICAgICAgICAgICAgICAgIGNsYXNzPSJjbG9zZSINCiAgICAgICAgICAgICAgICBkYXRhLWRpc21pc3M9Im1vZGFsIg0KICAgICAgICAgICAgICAgIGFyaWEtaGlkZGVuPSJ0cnVlIg0KICAgICAgICAgICAgICA+DQogICAgICAgICAgICAgICAgJnRpbWVzOw0KICAgICAgICAgICAgICA8L2J1dHRvbj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgPGRpdiB2LWlmPSIhUmVsb2FkaW5nIj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciI+DQogICAgICAgICAgICAgICAgICA8Yi1zcGlubmVyIHR5cGU9Imdyb3ciIGxhYmVsPSJTcGlubmluZyI+PC9iLXNwaW5uZXI+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICA8ZGl2IHYtZWxzZSBjbGFzcz0iY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICAgIDxiLWNhcmQgY2xhc3M9InJlZ2lzdHJlLWZvcm0iPg0KICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtICBjbGFzcz0ibXQtMyBjYXJkLWJvZHkiID4NCiAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwIGlkPSJpbnB1dC1ncm91cC0xIiBsYWJlbD0iTm9tIDoiIGxhYmVsLWZvcj0iaW5wdXQtMSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0DQogICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJpbnB1dC0xIg0KICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJFdHVkaWFudE1vZGlmaWVyLm5vbSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgOnBsYWNlaG9sZGVyPSJFdHVkaWFudERhdGEubm9tIg0KICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZA0KICAgICAgICAgICAgICAgICAgICAgICAgPjwvYi1mb3JtLWlucHV0Pg0KICAgICAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPg0KICAgICAgICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXAgaWQ9ImlucHV0LWdyb3VwLTEiIGxhYmVsPSJQcmVub20gOiIgbGFiZWwtZm9yPSJpbnB1dC0xIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxiLWZvcm0taW5wdXQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImlucHV0LTEiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9IkV0dWRpYW50TW9kaWZpZXIucHJlbm9tIg0KICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICA6cGxhY2Vob2xkZXI9IkV0dWRpYW50RGF0YS5wcmVub20iDQogICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkDQogICAgICAgICAgICAgICAgICAgICAgICA+PC9iLWZvcm0taW5wdXQ+DQogICAgICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+DQogICAgICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cA0KICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImlucHV0LWdyb3VwLTEiDQogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0iRGF0ZSBuYWlzc2FuY2UiDQogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbC1mb3I9ImlucHV0LTEiDQogICAgICAgICAgICAgICAgICAgICAgPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGItZm9ybS1pbnB1dA0KICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0iaW5wdXQtMSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iRXR1ZGlhbnRNb2RpZmllci5kYXRlX24iDQogICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9ImRhdGUiDQogICAgICAgICAgICAgICAgICAgICAgICAgIDpwbGFjZWhvbGRlciA9ICJFdHVkaWFudERhdGEuZGF0ZV9uIg0KICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZA0KICAgICAgICAgICAgICAgICAgICAgICAgPjwvYi1mb3JtLWlucHV0Pg0KICAgICAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPg0KICAgICAgICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXAgaWQ9ImlucHV0LWdyb3VwLTEiIGxhYmVsPSJDSU4iIGxhYmVsLWZvcj0iaW5wdXQtMSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0DQogICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJpbnB1dC0xIg0KICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJFdHVkaWFudE1vZGlmaWVyLkNJTiINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgOnBsYWNlaG9sZGVyPSJFdHVkaWFudERhdGEuQ0lOIg0KICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZA0KICAgICAgICAgICAgICAgICAgICAgICAgPjwvYi1mb3JtLWlucHV0Pg0KICAgICAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPg0KICAgICAgICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXAgaWQ9ImlucHV0LWdyb3VwLTEiIGxhYmVsPSJDTkUiIGxhYmVsLWZvcj0iaW5wdXQtMSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0DQogICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJpbnB1dC0xIg0KICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJFdHVkaWFudE1vZGlmaWVyLkNORSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgOnBsYWNlaG9sZGVyPSJFdHVkaWFudERhdGEuQ05FIg0KICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZA0KICAgICAgICAgICAgICAgICAgICAgICAgPjwvYi1mb3JtLWlucHV0Pg0KICAgICAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPg0KICAgICAgICAgICAgICAgICAgICAgIDwhLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIGVtYWlsLS0tLS0tLS0tLS0tLS0tLS0tLS0gLS0+DQogICAgICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cCBpZD0iaW5wdXQtZ3JvdXAtNiIgbGFiZWw9IkVtYWlsIiBsYWJlbC1mb3I9ImlucHV0LTUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGItZm9ybS1pbnB1dA0KICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0iaW5wdXQtNSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0iZW1haWwiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9IkV0dWRpYW50TW9kaWZpZXIuZW1haWwiDQogICAgICAgICAgICAgICAgICAgICAgICAgIDpwbGFjZWhvbGRlcj0iRXR1ZGlhbnREYXRhLmVtYWlsIg0KICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZA0KICAgICAgICAgICAgICAgICAgICAgICAgPjwvYi1mb3JtLWlucHV0Pg0KICAgICAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPg0KDQogICAgICAgICAgICAgICAgICAgICAgPCEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gcGFzc3dvcmQtLS0tLS0tLS0tLS0tLS0tLS0tLSAtLT4NCiAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwDQogICAgICAgICAgICAgICAgICAgICAgICBpZD0iaW5wdXQtZ3JvdXAtNiINCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPSJNb3RlIGRlIHBhc3NlIg0KICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWwtZm9yPSJpbnB1dC01Ig0KICAgICAgICAgICAgICAgICAgICAgID4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxiLWZvcm0taW5wdXQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImlucHV0LTUiDQogICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiDQogICAgICAgICAgICAgICAgICAgICAgICAgIDpwbGFjZWhvbGRlcj0iRXR1ZGlhbnREYXRhLnBhc3N3b3JkIg0KICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJFdHVkaWFudE1vZGlmaWVyLnBhc3N3b3JkIg0KICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZA0KICAgICAgICAgICAgICAgICAgICAgICAgPjwvYi1mb3JtLWlucHV0Pg0KICAgICAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPg0KICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgIDxiLWJ1dHRvbiBjbGFzcz0ibXgtMiIgIEBjbGljaz0iVXBkYXRlIiAgdmFyaWFudD0icHJpbWFyeSI+IE1vZGlmaWVyIDwvYi1idXR0b24+DQogICAgICAgICAgICAgICAgICAgIDwvYi1mb3JtPg0KICAgICAgICAgICAgICAgICAgPC9iLWNhcmQ+DQoNCiAgICAgICAgICAgICAgICAgIDxiLWNhcmQgY2xhc3M9Im10LTMgbWItNSIgaGVhZGVyPSJGb3JtIERhdGEgUmVzdWx0Ij4NCiAgICAgICAgICAgICAgICAgICAgPHByZSBjbGFzcz0ibS0wIj57eyBFdHVkaWFudE1vZGlmaWVyIH19PC9wcmU+DQogICAgICAgICAgICAgICAgICA8L2ItY2FyZD4NCiAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+DQogICAgICAgICAgICAgICAgICA8aW5wdXQNCiAgICAgICAgICAgICAgICAgICAgdHlwZT0iYnV0dG9uIg0KICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0Ig0KICAgICAgICAgICAgICAgICAgICBkYXRhLWRpc21pc3M9Im1vZGFsIg0KICAgICAgICAgICAgICAgICAgICB2YWx1ZT0iQ2FuY2VsIg0KICAgICAgICAgICAgICAgICAgLz4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDwvZm9ybT4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+DQogICAgICAgICAgPGlucHV0DQogICAgICAgICAgICB0eXBlPSJidXR0b24iDQogICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0Ig0KICAgICAgICAgICAgZGF0YS1kaXNtaXNzPSJtb2RhbCINCiAgICAgICAgICAgIHZhbHVlPSJDYW5jZWwiDQogICAgICAgICAgLz4NCiAgICAgICAgPC9kaXY+DQogICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCjwvZGl2Pg0K"},null]}